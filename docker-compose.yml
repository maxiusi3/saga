version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: saga-postgres
    environment:
      POSTGRES_DB: saga_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./packages/backend
      dockerfile: Dockerfile
    container_name: saga-backend
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: saga_dev
      DB_USER: postgres
      DB_PASSWORD: password
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
      JWT_EXPIRES_IN: 7d
      PORT: 3001
      NODE_ENV: development
      FRONTEND_URL: http://localhost:3000
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./packages/backend:/app
      - /app/node_modules
    command: npm run dev

  # Frontend Web App
  frontend:
    build:
      context: ./packages/web
      dockerfile: Dockerfile
    container_name: saga-frontend
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:3001/api
      NODE_ENV: development
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./packages/web:/app
      - /app/node_modules
      - /app/.next
    command: npm run dev

volumes:
  postgres_data: