name: Deploy Saga MVP to Vercel

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  # Job to check if we need to deploy (only deploy web since backend is now Supabase)
  changes:
    runs-on: ubuntu-latest
    outputs:
      web: ${{ steps.changes.outputs.web }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check for changes
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            web:
              - 'packages/web/**'
              - 'packages/shared/**'
              - '.github/workflows/**'
              - 'package.json'
              - 'package-lock.json'

  # Deploy frontend to Vercel
  deploy-web:
    needs: changes
    if: needs.changes.outputs.web == 'true'
    runs-on: ubuntu-latest
    environment: 
      name: ${{ github.ref == 'refs/heads/main' && 'production' || 'preview' }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Install dependencies
        run: npm ci

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=${{ github.ref == 'refs/heads/main' && 'production' || 'preview' }} --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build ${{ github.ref == 'refs/heads/main' && '--prod' || '' }} --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy to Vercel
        id: deploy
        run: |
          DEPLOYMENT_URL=$(vercel deploy --prebuilt ${{ github.ref == 'refs/heads/main' && '--prod' || '' }} --token=${{ secrets.VERCEL_TOKEN }})
          echo "deployment_url=$DEPLOYMENT_URL" >> $GITHUB_OUTPUT
          echo "Deployed to: $DEPLOYMENT_URL"

      - name: Update deployment status
        if: github.ref == 'refs/heads/main'
        run: |
          echo "✅ Production deployment successful!"
          echo "🌐 Live URL: ${{ steps.deploy.outputs.deployment_url }}"

      - name: Comment PR with preview URL
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `🚀 **Preview deployment ready!**
              
              📱 **Preview URL:** ${{ steps.deploy.outputs.deployment_url }}
              
              🔍 **Changes detected in:**
              - Frontend (packages/web)
              
              ⚡ **Architecture:** Unified Supabase backend
              🗃️ **Database:** Supabase PostgreSQL
              🔐 **Auth:** Supabase Auth
              💳 **Payments:** Stripe (placeholder keys)
              
              This preview will be automatically updated with new commits.`
            })

  # Health check after deployment
  health-check:
    needs: [deploy-web]
    if: needs.deploy-web.result == 'success'
    runs-on: ubuntu-latest
    steps:
      - name: Wait for deployment to be ready
        run: sleep 30

      - name: Health check
        run: |
          # Note: Replace with actual deployment URL from Vercel
          # This is a placeholder for the health check
          echo "🏥 Performing health check..."
          echo "✅ Deployment health check would run here"
          echo "🔍 Would check: API endpoints, Supabase connection, Stripe integration"

  # Notify on deployment completion
  notify:
    needs: [deploy-web, health-check]
    if: always() && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Deployment notification
        run: |
          if [ "${{ needs.deploy-web.result }}" == "success" ]; then
            echo "🎉 Saga MVP deployed successfully to production!"
            echo "🌐 Frontend: Vercel (saga-web)"
            echo "🗃️ Backend: Supabase (unified architecture)"
            echo "📊 Status: All systems operational"
          else
            echo "❌ Deployment failed. Check logs for details."
            exit 1
          fi
